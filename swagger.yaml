openapi: 3.0.1
info:
  title: Corporate merchandise API
  description: Server API for corporate products store
  termsOfService: ""
  contact:
    name: Shopping Development Team
  license:
    name: ""
    url: ""
  version: 0.0.1
externalDocs:
  description: Shopping Documentation
servers:
- url: http://localhost:7000
  description: Generated server url
paths:
  /api/v1/purchase/{purchaseId}:
    get:
      tags:
      - Заказ
      summary: Получение информации о заказе по его идентификатору
      operationId: getCustomerBySigmaLogin
      parameters:
      - name: purchaseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Информации о заказе получено успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Клиент не был найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
      - Заказ
      summary: Редактирование заказа
      operationId: putPurchaseInfo
      parameters:
      - name: purchaseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
        required: true
      responses:
        "200":
          description: Заказ обновлен успешно
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Заказ не был найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/v1/purchase/{purchaseId}/actions/cancel:
    put:
      tags:
      - Заказ
      summary: Отмена заказа
      operationId: cancelPurchase
      parameters:
      - name: purchaseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Заказ отменен успешно
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Заказ не был найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/v1/customer/{sigmaLogin}:
    get:
      tags:
      - Клиент
      summary: Получение информации о клиенте по его идентификатору (сигма логин)
      operationId: getCustomerBySigmaLogin_1
      parameters:
      - name: sigmaLogin
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Информации о клиенте получено успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Клиент не был найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
      - Клиент
      summary: Обновление данных о клиенте
      operationId: putCustomerInfo
      parameters:
      - name: sigmaLogin
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Данные о клиенте обновлены успешно
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Клиент не был найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
      - Клиент
      summary: Удаление клиента
      operationId: deleteCustomer
      parameters:
      - name: sigmaLogin
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Клиент удален успешно
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Клиент не был найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/v1/user/register:
    post:
      tags:
      - Пользователь
      summary: Создпние нового клиента
      operationId: postUserRegistrationRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      responses:
        "200":
          description: Пользователь успешно зарегистрирован
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/v1/purchase:
    post:
      tags:
      - Заказ
      summary: Создание нового заказы
      operationId: postPerformPurchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      responses:
        "200":
          description: Заказ создан успешно
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
components:
  schemas:
    ApiError:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: Error code
          example: "123"
        message:
          type: string
          description: Error message
          example: Invalid field value
    Customer:
      required:
      - birthday
      - id
      - lastName
      - name
      - username
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        lastName:
          type: string
        birthday:
          type: string
          format: date-time
        username:
          type: string
    Item:
      required:
      - name
      - sigmaLogin
      type: object
      properties:
        sigmaLogin:
          type: string
        name:
          type: string
    Purchase:
      required:
      - amount
      - customer
      - id
      - item
      - purchaseDate
      - quantity
      type: object
      properties:
        id:
          type: string
          format: uuid
        quantity:
          type: integer
          format: int32
        amount:
          type: number
        purchaseDate:
          type: string
          format: date
        item:
          $ref: '#/components/schemas/Item'
        customer:
          $ref: '#/components/schemas/Customer'
    UserRegistrationRequest:
      type: object
    PurchaseRequest:
      required:
      - productId
      - quantity
      type: object
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
          format: int64
